FORMAT: 1A
HOST: https://api.getheadlines.io/

# Get Headlines API

The **Get Headlines REST API** offers access and control over Get Headlines data, such as Sources (Feed providers) and Feeds.

In order to access the Get Headlines API, there are some things you first need to know. 

Read the sections below before you start using the Get Headlines API.

Most API resources are protected with **JSON Web Token Authentication**. 
You first need to register. Upon registration, you need to login to receive your personal API KEY, that allows you to authenticate against the API.

Once you have your private Authentication key, you can use it to authenticate your HTTP requests to the API. You can do so by adding an Authorization header to all your HTTP calls. 

The Authorization Header is formatted as such: 

`Authorization: Bearer JSWON_WEB_TOKEN`


## User [/user]


### Register [POST]

+ Request (application/json)

        {
            "name": "User Name",
            "email": "user@gmail.com",
            "password": "StrongPassword"
        }

+ Response 201 (application/json)

    Returned if a user was successfully created.

    + Body

            {
                "status": "ok",
                "user": {
                    "email" "user@gmail.com"
                }
                
            }
            
+ Response 409 (application/json)

    Returned if a user with given email already exist.
    
    + Body

            {
                "status": "error",
                "message": "AlreadyExist"
                
            }

+ Response 400 (application/json)

    Returned if email or password are not provided.
    
    + Body

            {
                "status": "error",
                "message": "ParameterMissing"
                
            }
            
+ Response 422 (application/json)

    Returned if provided parameters are not valid. (ex. Invalid email, or password less than 8 characters)
    
    + Body

            {
                "status": "error",
                "message": "ParameterInvalid"
                
            }


### Get User (self) [GET]

+ Request

    + Headers

            Authorization: Bearer TOKEN

+ Response 200 (application/json)

        {
            "status": "ok",
            "user": {
                "name": "User Name",
                "email" "user@gmail.com",
                "registered": 1524179174
            }
            
        }
        

### Delete User (self) [DELETE]

+ Request

    + Headers

            Authorization: Bearer TOKEN

+ Response 200 (application/json)

    + Body

            {
                "status": "ok",
                "message": "User with id 1 deleted."
                
            }
            
            
## Authentication [/auth]

### Login [POST]

+ Request (application/json)

        {
            "email": "user@gmail.com",
            "password": "StrongPassword"
        }

+ Response 200 (application/json)

    Returned if provided email and password are valid.

    + Body

            {
                "status": "ok",
                "message": {
                    "token" "YOUR PERSONAL JSON WEB TOKEN"
                }
                
            }
            
+ Response 401 (application/json)

    Returned if provided password did not match.
    
    + Body

            {
                "status": "error",
                "message": "InvalidPassword"
                
            }
            
+ Response 404 (application/json)

    Returned if provided email is not recognized (not used for registration).
    
    + Body

            {
                "status": "error",
                "message": "UserNotFound"
                
            }